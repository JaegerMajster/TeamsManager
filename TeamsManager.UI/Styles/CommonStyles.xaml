<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

	<!-- Dodatowe kolory dla gradientów i efektów -->
	<SolidColorBrush x:Key="AccentBlueLight" Color="#FF42A5F5"/>
	<SolidColorBrush x:Key="AccentBlueDark" Color="#FF0D47A1"/>
	<SolidColorBrush x:Key="AccentLime" Color="#FFCDDC39"/>
	<SolidColorBrush x:Key="AccentLimeLight" Color="#FFE6EE9C"/>
	<SolidColorBrush x:Key="SuccessGreen" Color="#FF4CAF50"/>
	<SolidColorBrush x:Key="WarningOrange" Color="#FFFF9800"/>

	<!-- Gradientowe tła -->
	<LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="1,1">
		<GradientStop Color="#FF0078D4" Offset="0"/>
		<GradientStop Color="#FF42A5F5" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="AccentGradient" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Color="#FF0078D4" Offset="0"/>
		<GradientStop Color="#FFCDDC39" Offset="1"/>
	</LinearGradientBrush>

	<!-- Efekty cienia -->
	<DropShadowEffect x:Key="ShadowLight" ShadowDepth="2" BlurRadius="4" Color="Black" Opacity="0.2" Direction="270"/>
	<DropShadowEffect x:Key="ShadowMedium" ShadowDepth="4" BlurRadius="8" Color="Black" Opacity="0.3" Direction="270"/>
	<DropShadowEffect x:Key="ShadowHeavy" ShadowDepth="8" BlurRadius="16" Color="Black" Opacity="0.4" Direction="270"/>

	<Style TargetType="Window" x:Key="BaseWindowStyle">
		<Setter Property="Background" Value="{DynamicResource BackgroundDark}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
	</Style>

	<Style x:Key="PageTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline5TextBlock}">
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="Margin" Value="0,0,0,24"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="Loaded">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.6"/>
						<ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,20,0,24" To="0,0,0,24" Duration="0:0:0.6">
							<ThicknessAnimation.EasingFunction>
								<CubicEase EasingMode="EaseOut"/>
							</ThicknessAnimation.EasingFunction>
						</ThicknessAnimation>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SectionHeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline6TextBlock}">
		<Setter Property="Foreground" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="Margin" Value="0,20,0,12"/>
		<Setter Property="FontWeight" Value="Medium"/>
	</Style>

	<Style x:Key="InstructionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
		<Setter Property="Foreground" Value="{DynamicResource TextSecondary}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,0,0,12"/>
		<Setter Property="LineHeight" Value="22"/>
	</Style>

	<Style x:Key="ErrorTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
		<Setter Property="Foreground" Value="{DynamicResource AccentRed}"/>
		<Setter Property="FontStyle" Value="Italic"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="Loaded">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="2x"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<!-- Rounded TextBox with custom border -->
	<Style x:Key="RoundedTextBox" TargetType="Border">
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{DynamicResource BackgroundMedium}"/>
		<Setter Property="Margin" Value="0,5,0,15"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
		<Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
		<Setter Property="Margin" Value="0,5,0,15"/>
		<Setter Property="Padding" Value="12,10"/>
		<Setter Property="FontSize" Value="14"/>
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#FF2D2D30" Opacity="0.5"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignOutlinedPasswordBox}">
		<Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
		<Setter Property="Margin" Value="0,5,0,15"/>
		<Setter Property="Padding" Value="12,10"/>
		<Setter Property="FontSize" Value="14"/>
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="BaseModernButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="Padding" Value="15,18"/>
		<Setter Property="Height" Value="64"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
		<Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="8"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.02" Duration="0:0:0.1"/>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.02" Duration="0:0:0.1"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1" Duration="0:0:0.1"/>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1" Duration="0:0:0.1"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp1"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.6"/>
				<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="PrimaryActionButton" TargetType="Button" BasedOn="{StaticResource BaseModernButton}">
		<Setter Property="Background" Value="{StaticResource HeaderGradient}"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource AccentBlueLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SecondaryActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
		<Setter Property="Foreground" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="Padding" Value="15,18"/>
		<Setter Property="Height" Value="64"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		<Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="8"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Background" Value="Transparent"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#FF0078D4" Opacity="0.1"/>
					</Setter.Value>
				</Setter>
				<Setter Property="BorderBrush" Value="{StaticResource AccentBlueLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource BaseModernButton}">
		<Setter Property="Background" Value="{DynamicResource AccentRed}"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FFE53935"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource BaseModernButton}">
		<Setter Property="Background" Value="{StaticResource SuccessGreen}"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FF66BB6A"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource BaseModernButton}">
		<Setter Property="Background" Value="{StaticResource WarningOrange}"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FFFFA726"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="HyperlinkButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
		<Setter Property="Foreground" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Padding" Value="5,0"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="TextBlock.TextDecorations" Value="Underline"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource AccentBlueLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Floating Action Button styl -->
	<Style x:Key="FloatingActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
		<Setter Property="Background" Value="{StaticResource AccentLime}"/>
		<Setter Property="Foreground" Value="{DynamicResource BackgroundDark}"/>
		<Setter Property="Width" Value="56"/>
		<Setter Property="Height" Value="56"/>
		<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource AccentLimeLight}"/>
				<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Icon Button Style -->
	<Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
		<Setter Property="Width" Value="40"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="20"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#FF0078D4" Opacity="0.1"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Modern DataGrid with rounded corners wrapper -->
	<Style x:Key="RoundedDataGrid" TargetType="Border">
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Background" Value="{DynamicResource BackgroundMedium}"/>
		<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
		<Setter Property="Margin" Value="0,8"/>
	</Style>

	<Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
		<Setter Property="CanUserAddRows" Value="False"/>
		<Setter Property="CanUserDeleteRows" Value="False"/>
		<Setter Property="AutoGenerateColumns" Value="False"/>
		<Setter Property="HeadersVisibility" Value="Column"/>
		<Setter Property="SelectionMode" Value="Single"/>
		<Setter Property="GridLinesVisibility" Value="Horizontal"/>
		<Setter Property="AlternatingRowBackground">
			<Setter.Value>
				<SolidColorBrush Color="#FF2D2D30" Opacity="0.3"/>
			</Setter.Value>
		</Setter>
		<Setter Property="RowHeight" Value="48"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>

	<Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
		<Setter Property="Background" Value="{StaticResource HeaderGradient}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Padding" Value="16,12"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>

	<Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#FF0078D4" Opacity="0.1"/>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<EventTrigger RoutedEvent="Loaded">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
		<Setter Property="Padding" Value="16,12"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource AccentLime}" StrokeThickness="1" StrokeDashArray="1 2"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
		<Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True"/>
		<Setter Property="Margin" Value="0,5,0,15"/>
		<Setter Property="Padding" Value="12,10"/>
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="Margin" Value="0,10"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1" CenterX="10" CenterY="10"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Foreground" Value="{StaticResource AccentLime}"/>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="1.1" Duration="0:0:0.1" AutoReverse="True"/>
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="1.1" Duration="0:0:0.1" AutoReverse="True"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Modern Expander with rounded corners -->
	<Style TargetType="Expander" BasedOn="{StaticResource MaterialDesignExpander}">
		<Setter Property="Background" Value="{DynamicResource BackgroundLight}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="Margin" Value="0,8"/>
		<Setter Property="Padding" Value="16"/>
		<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
		<Style.Triggers>
			<Trigger Property="IsExpanded" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignLinearProgressBar}">
		<Setter Property="Background" Value="{DynamicResource BackgroundLight}"/>
		<Setter Property="Foreground" Value="{StaticResource AccentGradient}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="Height" Value="8"/>
		<Setter Property="Margin" Value="0,8"/>
	</Style>

	<Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}">
		<Setter Property="Background" Value="{DynamicResource BackgroundMedium}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
	</Style>

	<Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
		<Setter Property="Padding" Value="16,12"/>
		<Setter Property="Margin" Value="4"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#FF0078D4" Opacity="0.1"/>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Separator">
		<Setter Property="Background" Value="{DynamicResource BorderDark}"/>
		<Setter Property="Margin" Value="0,16"/>
		<Setter Property="Height" Value="1"/>
		<Setter Property="Opacity" Value="0.5"/>
	</Style>

	<Style x:Key="InfoCardStyle" TargetType="Border">
		<Setter Property="Background" Value="{DynamicResource BackgroundLight}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDark}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="12"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Margin" Value="0,12"/>
		<Setter Property="Effect" Value="{StaticResource ShadowLight}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
				<Setter Property="Effect" Value="{StaticResource ShadowMedium}"/>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,10,0,14" Duration="0:0:0.2">
								<ThicknessAnimation.EasingFunction>
									<CubicEase EasingMode="EaseOut"/>
								</ThicknessAnimation.EasingFunction>
							</ThicknessAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,12" Duration="0:0:0.2"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Chip/Tag Style -->
	<Style x:Key="ChipStyle" TargetType="Border">
		<Setter Property="Background" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="CornerRadius" Value="12"/>
		<Setter Property="Padding" Value="12,6"/>
		<Setter Property="Margin" Value="4"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource AccentBlueLight}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Status indicators -->
	<Style x:Key="StatusIndicator" TargetType="Ellipse">
		<Setter Property="Width" Value="12"/>
		<Setter Property="Height" Value="12"/>
		<Setter Property="Margin" Value="4"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="Loaded">
				<BeginStoryboard>
					<Storyboard RepeatBehavior="Forever">
						<DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="1" To="0.3" Duration="0:0:1"
                                       AutoReverse="True"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<!-- Animacje -->
	<Storyboard x:Key="FadeIn">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
	</Storyboard>

	<Storyboard x:Key="SlideInFromLeft">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.4"/>
		<ThicknessAnimation Storyboard.TargetProperty="Margin"
                          From="-50,0,50,0" To="0" Duration="0:0:0.4">
			<ThicknessAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
	</Storyboard>

	<Storyboard x:Key="SlideInFromBottom">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.4"/>
		<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                       From="30" To="0" Duration="0:0:0.4">
			<DoubleAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
	</Storyboard>

	<!-- Tooltip style -->
	<Style TargetType="ToolTip" BasedOn="{StaticResource MaterialDesignToolTip}">
		<Setter Property="Background" Value="{DynamicResource BackgroundDark}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
	</Style>

	<!-- Modern Switch Style -->
	<Style x:Key="ModernSwitch" TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Foreground" Value="{StaticResource AccentLime}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>