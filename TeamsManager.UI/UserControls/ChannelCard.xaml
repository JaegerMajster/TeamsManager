<UserControl x:Class="TeamsManager.UI.UserControls.ChannelCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="180" d:DesignWidth="320">
    
    <UserControl.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" xmlns:converters="clr-namespace:TeamsManager.UI.Converters"/>
        
        <!-- Status Badge Style -->
        <Style x:Key="StatusBadgeStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
    </UserControl.Resources>

    <!-- Channel Card -->
    <Border x:Name="CardBorder"
            MinHeight="160" 
            Width="300" 
            Margin="8"
            Style="{StaticResource InfoCardStyle}"
            Background="{DynamicResource BackgroundLight}"
            BorderBrush="{DynamicResource BorderDark}"
            BorderThickness="1"
            CornerRadius="12"
            Padding="16">
        
        <Border.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                       To="1.02" Duration="0:0:0.2">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                       To="1.02" Duration="0:0:0.2">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                       To="1.0" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                       To="1.0" Duration="0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
        
        <Border.RenderTransform>
            <ScaleTransform/>
        </Border.RenderTransform>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Header Row -->
            <Grid Grid.Row="0" Margin="0,0,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Channel Icon -->
                <materialDesign:PackIcon Grid.Column="0"
                                       Kind="{Binding ChannelIcon}" 
                                       Width="24" Height="24"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource AccentBlue}"
                                       Margin="0,0,12,0"/>
                
                <!-- Channel Name (Normal Mode) -->
                <TextBlock Grid.Column="1"
                          Text="{Binding Channel.DisplayName}"
                          Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                          Foreground="{DynamicResource TextPrimary}"
                          FontWeight="SemiBold"
                          TextTrimming="CharacterEllipsis"
                          VerticalAlignment="Center"
                          Visibility="{Binding IsEditMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                
                <!-- Channel Name (Edit Mode) -->
                <TextBox Grid.Column="1"
                        Text="{Binding EditingDisplayName, UpdateSourceTrigger=PropertyChanged}"
                        materialDesign:HintAssist.Hint="Nazwa kanału"
                        materialDesign:HintAssist.IsFloating="True"
                        FontSize="16"
                        FontWeight="SemiBold"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Background="{DynamicResource BackgroundMedium}"
                        BorderBrush="{DynamicResource AccentBlue}"/>
                
                <!-- Status Badge -->
                <Border Grid.Column="2"
                        Style="{StaticResource StatusBadgeStyle}"
                        Background="{Binding StatusColor}">
                    <TextBlock Text="{Binding Channel.StatusDescription}"
                              FontSize="11"
                              FontWeight="Medium"
                              Foreground="White"/>
                </Border>
            </Grid>
            
            <!-- Description Row -->
            <ScrollViewer Grid.Row="1" 
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Disabled"
                         Margin="0,0,0,12">
                <Grid>
                    <!-- Description (Normal Mode) -->
                    <TextBlock Text="{Binding Channel.Description}"
                              Style="{StaticResource MaterialDesignBody2TextBlock}"
                              Foreground="{DynamicResource TextSecondary}"
                              TextWrapping="Wrap"
                              LineHeight="20"
                              Visibility="{Binding IsEditMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                    
                    <!-- Description (Edit Mode) -->
                    <TextBox Text="{Binding EditingDescription, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Opis kanału"
                            materialDesign:HintAssist.IsFloating="True"
                            TextWrapping="Wrap"
                            AcceptsReturn="True"
                            MinLines="2"
                            MaxLines="4"
                            VerticalScrollBarVisibility="Auto"
                            Background="{DynamicResource BackgroundMedium}"
                            Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </ScrollViewer>
            
            <!-- Actions Row -->
            <StackPanel Grid.Row="2" 
                       Orientation="Horizontal" 
                       HorizontalAlignment="Right">
                
                <!-- Normal Mode Actions -->
                <StackPanel Orientation="Horizontal"
                           Visibility="{Binding IsEditMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                    
                    <!-- Edit Button -->
                    <Button Style="{StaticResource IconButton}"
                           Command="{Binding EditCommand}"
                           ToolTip="Edytuj kanał"
                           Margin="0,0,4,0">
                        <materialDesign:PackIcon Kind="Pencil" Width="16" Height="16"/>
                    </Button>
                    
                    <!-- Archive/Restore Button -->
                    <Button Style="{StaticResource IconButton}"
                           Command="{Binding ToggleArchiveCommand}"
                           Margin="0,0,4,0">
                        <Button.ToolTip>
                            <TextBlock Text="{Binding Channel.Status, StringFormat='{}Status: {0}'}"/>
                        </Button.ToolTip>
                        <materialDesign:PackIcon Width="16" Height="16">
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Setter Property="Kind" Value="Archive"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Channel.Status}" Value="Archived">
                                            <Setter Property="Kind" Value="ArchiveArrowUp"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                    </Button>
                    
                    <!-- Delete Button -->
                    <Button Style="{StaticResource DangerButton}"
                           Command="{Binding DeleteCommand}"
                           ToolTip="Usuń kanał"
                           IsEnabled="{Binding CanBeDeleted}">
                        <materialDesign:PackIcon Kind="Delete" Width="16" Height="16"/>
                    </Button>
                </StackPanel>
                
                <!-- Edit Mode Actions -->
                <StackPanel Orientation="Horizontal"
                           Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                    <!-- Save Button -->
                    <Button Style="{StaticResource SuccessButton}"
                           Command="{Binding SaveCommand}"
                           Content="Zapisz"
                           Margin="0,0,8,0">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Check" 
                                                           Width="16" Height="16" 
                                                           Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                    
                    <!-- Cancel Button -->
                    <Button Style="{StaticResource SecondaryActionButton}"
                           Command="{Binding CancelCommand}"
                           Content="Anuluj">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Close" 
                                                           Width="16" Height="16" 
                                                           Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </StackPanel>
            </StackPanel>
            
            <!-- Loading Overlay -->
            <Border Grid.RowSpan="3"
                   Background="#AA000000"
                   CornerRadius="12"
                   Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel VerticalAlignment="Center" 
                           HorizontalAlignment="Center">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                IsIndeterminate="True"
                                Width="32" Height="32"
                                Foreground="{DynamicResource AccentBlue}"/>
                    <TextBlock Text="Przetwarzanie..."
                              Margin="0,8,0,0"
                              Foreground="White"
                              HorizontalAlignment="Center"
                              Style="{StaticResource MaterialDesignCaptionTextBlock}"/>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</UserControl> 